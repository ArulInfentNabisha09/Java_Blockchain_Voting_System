/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it133;

import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.util.ArrayList;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author i-Tech Software Academy @Nagercoil
 */
public class AddCandidate extends javax.swing.JFrame {
    public static int id=1;
    public static ArrayList<String> vid = new ArrayList<>();
    String data=null;
    protected DatagramSocket socket = null;
    public String code=null;
    
    /**
     * Creates new form AddCandidate
     */
    public AddCandidate() {
        initComponents();
        jTextField3.setEnabled(false);
        jTextField3.setText("B1");
        jButton1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PRBFPT: A Practical Redactable Blockchain Framework With a Public Trapdoor");

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("ADD CANDIDATE");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(390, 30, 220, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Candidate Name");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(250, 130, 108, 19);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Voter ID");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(250, 200, 70, 19);

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField1);
        jTextField1.setBounds(410, 120, 250, 40);

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField2);
        jTextField2.setBounds(410, 190, 250, 40);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(450, 460, 120, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Key");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(250, 320, 60, 30);

        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField3);
        jTextField3.setBounds(410, 320, 250, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("E-Mail ID");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(250, 270, 100, 19);

        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(jTextField4);
        jTextField4.setBounds(410, 260, 250, 40);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton2.setText("Check");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(680, 260, 140, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel6.setText("Code");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(250, 400, 33, 19);

        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jPanel1.add(jTextField5);
        jTextField5.setBounds(410, 390, 250, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            int st=0;
            for (String element : vid) {
            if(jTextField2.getText().equalsIgnoreCase(element))
            {
                st=1;
            }
        }
            if(st==0){
                
            if(jTextField5.getText().equalsIgnoreCase(code)){
                vid.add(jTextField2.getText());
            byte[] buf = new byte[500000];
            socket = new DatagramSocket(4417);
            data=jTextField1.getText()+","+jTextField2.getText()+","+jTextField3.getText();
            System.out.print(data);
            buf = data.getBytes();
            InetAddress group = InetAddress.getByName("230.0.0.1");//230.0.0.5");
            DatagramPacket packet = new DatagramPacket(buf, buf.length,
                    group, 4418);
            socket.send(packet);
            socket.close();
JOptionPane.showMessageDialog(this, "Candidate Saved");
id=id+1;
jTextField3.setText("B"+String.valueOf(id));
jButton1.setEnabled(false);
            }
            else{
                JOptionPane.showMessageDialog(this, "Invalid Hash Code\n Please Check E-Mail ID");
            }
            
            }
            else{
                JOptionPane.showMessageDialog(this, "Candidate Already Vote Polling");
            }
        } catch (Exception e) {
            System.out.println("An error occurred." + e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        send(jTextField4.getText());
    }//GEN-LAST:event_jButton2ActionPerformed
public void send(String email){
     int min = 8000;
        int max = 9999;
        
        // Create a Random object
        Random random = new Random();
        
        // Generate a random number within the range
        int randomNumber = random.nextInt(max - min + 1) + min;
            code=String.valueOf(randomNumber);
    // Sender's email ID needs to be mentioned
        String from = "demo2020itech@gmail.com";
        // Recipient's email ID needs to be mentioned.
        String to = email;
        // Assuming you are sending email from Gmail
        String host = "smtp.gmail.com";
        // Get system properties
        Properties properties = System.getProperties();
        // Setup mail server
        properties.setProperty("mail.smtp.host", host);
        properties.setProperty("mail.smtp.port", "587");
        properties.setProperty("mail.smtp.auth", "true");
        properties.setProperty("mail.smtp.starttls.enable", "true");
        
        // Get the Session object.// and pass username and password
        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("demo2020itech@gmail.com", "hzgeofewvmrqraam");
            }
        });

        try {
            // Create a default MimeMessage object.
            MimeMessage message = new MimeMessage(session);
            // Set From: header field of the header.
            message.setFrom(new InternetAddress(from));
            // Set To: header field of the header.
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
            // Set Subject: header field
            message.setSubject("Hash Code");
            // Now set the actual message
            message.setText("hash Code : <b>"+code+"</b>");
            // Send message
            Transport.send(message);
            System.out.println("Sent message successfully....");
            JOptionPane.showMessageDialog(this, "Verify Code From Mail ID");
            jButton1.setEnabled(true);
            
        } catch (MessagingException mex) {
            mex.printStackTrace();
        }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCandidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCandidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCandidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCandidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCandidate().setVisible(true);
            }
        });
        MulticastSocket socket = new MulticastSocket(4499);
        InetAddress address = InetAddress.getByName("230.0.0.1");
        socket.joinGroup(address);
        DatagramPacket packet;
        while (true) {
            //jTextArea1.setText("");
           
        InetAddress ipAddr = InetAddress.getLocalHost();
            //
            byte[] buf = new byte[500000];
            packet = new DatagramPacket(buf, buf.length);
            socket.receive(packet);
            int k=2000;
            String received = new String(packet.getData());
            received = received.trim();
            
            // ta.setText("");
            String ipaddr = "";
            try {
                jTextField3.setText("B1");
                id=1;
                } catch (Exception e) {
                System.out.println(e);
            }
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    public static javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
